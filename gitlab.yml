---
- hosts: gitlab
  sudo: yes
  vars_files:
    - vars.yml
  tasks:
    - name: add domain to hosts file for fast resolution
      action: template src=templates/hosts.j2 dest=/etc/hosts
    - name: ensure apt cache is up to date
      action: apt update_cache=yes
    - name: ensure app apt dependencies are installed
      action: apt pkg=$item
      with_items:
        - build-essential
        - checkinstall
        - curl
        - git-core
        - libcurl4-openssl-dev
        - libffi-dev
        - libgdbm-dev
        - libicu-dev
        - libmysqlclient-dev
        - libncurses5-dev
        - libreadline-dev
        - libssl-dev
        - libxml2-dev
        - libxslt1-dev
        - libyaml-dev
        - logrotate
        - mysql-client
        - mysql-server
        - openssh-server
        - postfix
        - redis-server
        - zlib1g-dev
        - libexpat1-dev
        - gettext
        - python-mysqldb # Required for ansible mysql module to work, see: http://ansible.cc/docs/modules.html#mysql-user

- hosts: gitlab
  sudo: yes
  tasks:
    - name: ensure /usr/local/bin/python2 links to /usr/bin/python
      file: state=link src=/usr/bin/python path=/usr/local/bin/python2

- hosts: gitlab
  sudo: yes
  vars_files:
    - vars.yml  
  tasks:
    - name: Start the MySQL service
      action: service name=mysql state=started

    # 'localhost' needs to be the last item for idempotency, see
    # http://ansible.cc/docs/modules.html#mysql-user
    - name: update mysql root password for all root accounts
      mysql_user: name=root host=$item password=$database_password
      with_items:
        - $ansible_hostname
        - 127.0.0.1
        - ::1
        - localhost

    - name: copy .my.cnf file with root password credentials (to root)
      template: src=templates/my.cnf.j2 dest=/root/.my.cnf owner=root mode=0600

    - name: delete anonymous MySQL server user for $server_hostname
      action: mysql_user user="" host="$server_hostname" state="absent"

    - name: delete anonymous MySQL server user for localhost
      action: mysql_user user="" state="absent"

    - name: remove the MySQL test database
      action: mysql_db db=test state=absent      

# Compile Ruby!

- hosts: gitlab
  sudo: no
  vars:
    url: http://ftp.ruby-lang.org/pub/ruby/2.0/ruby-2.0.0-p247.tar.gz
    path: /tmp/ruby/ruby-2.0.0-p247
  tasks:
    - name: checking if ruby is installed
      command: ruby --version | grep 2.0.0p247
      register: result
      ignore_errors: True
    - name: ensure directory /tmp/ruby is present
      file: state=directory path=/tmp/ruby
      when: result|failed
    - name: ensure ruby is downloaded
      get_url: url=$url dest=/tmp/ruby
      when: result|failed
    - name: ensure ruby is extracted
      command: tar -xf ruby-2.0.0-p247.tar.gz chdir=/tmp/ruby creates=$path
      when: result|failed
    - name: ensure ruby is configured
      command: ./configure --disable-install-rdoc chdir=$path creates=$path/Makefile
      when: result|failed
    - name: ensure ruby is compiled
      command: make chdir=$path creates=$path/ruby
      when: result|failed

- hosts: gitlab
  sudo: yes
  vars:
    path: /tmp/ruby/ruby-2.0.0-p247
  tasks:
    - name: ensure ruby is installed
      command: make install chdir=$path creates=/usr/local/bin/ruby
    - name: update gem system
      command: gem update --system
    - name: ensure bundler is installed
      command: gem install bundler --no-ri --no-rdoc creates=/usr/local/lib/ruby/gems/2.0.0/gems/bundler-1.3.5

# System Users

- hosts: gitlab
  sudo: yes
  vars_files:
    - vars.yml
  tasks:
    - name: ensure user git is present
      user: state=present name=git system=yes shell=/bin/sh comment="Git Version Control"
    - name: copy .my.cnf file with root password credentials (to git)
      template: src=templates/my.cnf.j2 dest=/home/git/.my.cnf owner=git mode=0600

# 4. GitLab Shell

- hosts: gitlab
  sudo: yes
  sudo_user: git
  vars_files:
    - vars.yml
  tasks:
    - name: ensure Gitlab-Shell git repository is cloned
      git: repo=https://github.com/gitlabhq/gitlab-shell.git dest=/home/git/gitlab-shell version=v1.7.8
    - name: ensure gitlab-shell config is written
      action: template src=templates/gitlab_shell_config.yml.j2 dest=/home/git/gitlab-shell/config.yml mode=0755
    - name: ensure gitlab-shell is installed
      command: /home/git/gitlab-shell/bin/install

# 6. GitLab

- hosts: gitlab
  sudo: yes
  sudo_user: git
  vars_files:
    - vars.yml
  tasks:
    - name: ensure GitLab 6-2-stable is cloned
      git: repo=https://github.com/gitlabhq/gitlabhq.git dest=/home/git/gitlab version=6-2-stable
    - name: ensure GitLab config file exists
      action: template src=templates/gitlab.yml.j2 dest=/home/git/gitlab/config/gitlab.yml mode=0755
    - name: Make sure that socket dir exists
      action: file path=/home/git/gitlab/tmp/sockets state=directory
    - name: Make sure that pids dir exists
      action: file path=/home/git/gitlab/tmp/pids state=directory

- hosts: gitlab
  sudo: yes
  tasks:
    - name: ensure GitLab can write to log (2)
      command: chmod -R u+rwX /home/git/gitlab/log
    - name: ensure GitLab can write to tmp (2)
      command: chmod -R u+rwX /home/git/gitlab/tmp

- hosts: gitlab
  sudo: yes
  sudo_user: git
  vars_files:
    - vars.yml
  tasks:
    - name: ensure directory for satellites exists
      file: state=directory path=/home/git/gitlab-satellites
    - name: ensure database config is written
      action: template src=templates/database.yml.j2 dest=/home/git/gitlab/config/database.yml mode=0755
    - name: ensure database gitlabhq_production is present
      mysql_db: state=present name=gitlabhq_production collation=utf8_unicode_ci encoding=utf8
    - name: ensure database user gitlab is present and has privleges
      mysql_user: state=present name=gitlab host=localhost password=$database_password priv=gitlabhq_production.*:ALL
    - name: ensure copy of unicorn config exists
      command: cp /home/git/gitlab/config/unicorn.rb.example /home/git/gitlab/config/unicorn.rb creates=/home/git/gitlab/config/unicorn.rb
    - name: ensure copy of rackattack config exists
      command: cp /home/git/gitlab/config/initializers/rack_attack.rb.example /home/git/gitlab/config/initializers/rack_attack.rb creates=/home/git/gitlab/config/initializers/rack_attack.rb

# - hosts: gitlab
#   sudo: yes
#   tasks:
#     - name: ensure gem charlock_holmes is installed
#       command: gem install charlock_holmes --version '0.6.9'

- hosts: gitlab
  sudo: yes
  sudo_user: git
  vars_files:
    - vars.yml
  tasks:
    - name: ensure GitLab bundle is installed
      command: bundle install --deployment --without development test postgres aws chdir=/home/git/gitlab

- hosts: gitlab
  sudo: yes
  sudo_user: git
  tasks:
    - shell: yes 'yes' | bundle exec rake gitlab:setup RAILS_ENV=production chdir=/home/git/gitlab

# 6. GitLab (continued)

- hosts: gitlab
  sudo: yes
  vars_files:
    - vars.yml
  tasks:
    - name: ensure startup script
      command: cp /home/git/gitlab/lib/support/init.d/gitlab /etc/init.d/gitlab
    - name: ensure startup script file mode
      file: path=/etc/init.d/gitlab mode=0755
    - name: make GitLab start on boot
      command: update-rc.d gitlab defaults 21
    - name: ensure logrotation
      command: cp /home/git/gitlab/lib/support/logrotate/gitlab /etc/logrotate.d/gitlab
    - name: start GitLab
      command: /etc/init.d/gitlab start
      ignore_errors: yes

# 7. Nginx
- hosts: gitlab
  sudo: yes
  vars_files:
    - vars.yml
  tasks:
    - name: ensure package nginx is present
      apt: state=present pkg=nginx
    - name: ensure GitLab Nginx site is available
      action: template src=templates/nginx.conf.j2 dest=/etc/nginx/sites-available/gitlab mode=0755
    - name: ensure default Nginx site is not enabled
      file: state=absent path=/etc/nginx/sites-enabled/default
    - name: ensure GitLab Nginx site is enabled
      file: state=link src=/etc/nginx/sites-available/gitlab path=/etc/nginx/sites-enabled/gitlab

- hosts: gitlab
  sudo: yes
  tasks:
    - name: restart Nginx
      command: /etc/init.d/nginx restart
